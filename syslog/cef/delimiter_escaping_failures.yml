- id: 1013
  dataTypes:
    - cef
  name: CEF Delimiter Escaping Failures
  impact:
    confidentiality: 3
    integrity: 5
    availability: 3
  category: Data Integrity
  technique: Log Injection
  adversary: origin
  references:
    - https://www.microfocus.com/documentation/arcsight/arcsight-smartconnectors-8.3/cef-implementation-standard/Content/CEF/Chapter%201%20What%20is%20CEF.htm
    - https://attack.mitre.org/techniques/T1070/003/
  description: Detects improper escaping of pipe delimiters in CEF messages which can lead to field injection, log parsing errors, or attempts to manipulate log analysis
  where: |
    (
      (safe(log.deviceVendor, "").contains("|") && !safe(log.deviceVendor, "").contains("\\|")) ||
      (safe(log.deviceProduct, "").contains("|") && !safe(log.deviceProduct, "").contains("\\|")) ||
      (safe(log.deviceVersion, "").contains("|") && !safe(log.deviceVersion, "").contains("\\|")) ||
      (safe(log.name, "").contains("|") && !safe(log.name, "").contains("\\|")) ||
      (safe(log.message, "").matches(".*[^\\\\]\\|.*\\|.*\\|.*\\|.*\\|.*\\|.*\\|.*") && 
       !safe(log.message, "").startsWith("CEF:")) ||
      (safe(log.cs1, "").contains("|") && !safe(log.cs1, "").contains("\\|")) ||
      (safe(log.cs2, "").contains("|") && !safe(log.cs2, "").contains("\\|")) ||
      (safe(log.message, "").matches(".*=.*\\|.*=.*") && 
       safe(log.message, "").matches(".*[^\\\\]=.*\\|.*"))
    )
  afterEvents:
    - indexPattern: v11-log-*
      with:
        - field: origin.ip.keyword
          operator: filter_term
          value: '{{origin.ip}}'
      within: now-1h
      count: 3
  deduplicateBy:
    - origin.ip
    - log.deviceVendor
    - log.deviceProduct