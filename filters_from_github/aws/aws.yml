# AWS filter, version 1.0.2

pipeline:
  - dataTypes:
      - aws
    steps:
      - json:
          source: raw

      - rename:
          from:
            - log.userIdentity.accessKeyId
          to: log.userIdentityAccessKeyId

      - rename:
          from:
            - log.userIdentity.accountId
          to: log.userIdentityAccountId

      - rename:
          from:
            - log.userIdentity.arn
          to: log.userIdentityArn

      - rename:
          from:
            - log.userIdentity.invokedBy
          to: log.userIdentityInvokedBy

      - rename:
          from:
            - log.userIdentity.principalId
          to: log.userIdentityPrincipalId

      - rename:
          from:
            - log.userIdentity.sessionContext.attributes.creationDate
          to: log.userIdentitySessionContextAttributesCreationDate

      - rename:
          from:
            - log.userIdentity.sessionContext.attributes.mfaAuthenticated
          to: log.userIdentitySessionContextAttributesMfaAuthenticated

      - rename:
          from:
            - log.userIdentity.sessionContext.sessionIssuer.accountId
          to: log.userIdentitySessionContextSessionIssuerAccountId

      - rename:
          from:
            - log.userIdentity.sessionContext.sessionIssuer.arn
          to: log.userIdentitySessionContextSessionIssuerArn

      - rename:
          from:
            - log.userIdentity.sessionContext.sessionIssuer.principalId
          to: log.userIdentitySessionContextSessionIssuerPrincipalId

      - rename:
          from:
            - log.userIdentity.sessionContext.sessionIssuer.type
          to: log.userIdentitySessionContextSessionIssuerType

      - rename:
          from:
            - log.userIdentity.sessionContext.sessionIssuer.userName
          to: log.userIdentitySessionContextSessionIssuerUserName

      - rename:
          from:
            - log.userIdentity.sessionContext.webIdFederationData
          to: log.userIdentitySessionContextWebIdFederationData

      - rename:
          from:
            - log.userIdentity.type
          to: log.userIdentityType

      - rename:
          from:
            - log.requestParameters.durationSeconds
          to: log.requestParametersDurationSeconds

      - rename:
          from:
            - log.requestParameters.roleArn
          to: log.requestParametersRoleArn

      - rename:
          from:
            - log.requestParameters.roleSessionName
          to: log.requestParametersRoleSessionName

      - rename:
          from:
            - log.responseElements.assumedRoleUser.arn
          to: log.responseElementsAssumedRoleUserArn

      - rename:
          from:
            - log.responseElements.assumedRoleUser.assumedRoleId
          to: log.responseElementsAssumedRoleUserAssumedRoleId

      - rename:
          from:
            - log.responseElements.credentials.accessKeyId
          to: log.responseElementsCredentialsAccessKeyId

      - rename:
          from:
            - log.responseElements.credentials.expiration
          to: log.responseElementsCredentialsExpiration

      - rename:
          from:
            - log.responseElements.credentials.sessionToken
          to: log.responseElementsCredentialsSessionToken

      - rename:
          from:
            - log.requestParameters.Host
          to: log.requestParametersHost

      - rename:
          from:
            - log.requestParameters.acl
          to: log.requestParametersAcl

      - rename:
          from:
            - log.requestParameters.bucketName
          to: log.userIdentityAccesrequestParametersBucketNamesKeyId

      - rename:
          from:
            - log.additionalEventData.SignatureVersion
          to: log.additionalEventDataSignatureVersion

      - rename:
          from:
            - log.additionalEventData.AuthenticationMethod
          to: log.additionalEventDataAuthenticationMethod

      - rename:
          from:
            - log.additionalEventData.CipherSuite
          to: log.additionalEventDataCipherSuite

      - rename:
          from:
            - log.additionalEventData.bytesTransferredIn
          to: origin.bytesReceived

      - rename:
          from:
            - log.additionalEventData.bytesTransferredOut
          to: origin.bytesSent

      - rename:
          from:
            - log.additionalEventData.x-amz-id-2
          to: log.additionalEventDataXamzId2

      - rename:
          from:
            - log.additionalEventData.SSEApplied
          to: log.additionalEventDataSSEApplied

      - rename:
          from:
            - log.requestParameters.key
          to: log.requestParametersKey

      - rename:
          from:
            - log.requestParameters.x-amz-acl
          to: log.requestParametersXAmzAcl

      - rename:
          from:
            - log.requestParameters.x-amz-server-side-encryption
          to: log.requestParametersXAmzServerSideEncryption

      - rename:
          from:
            - log.responseElements.x-amz-expiration
          to: log.responseElementsXAmzExpiration

      - rename:
          from:
            - log.responseElements.x-amz-server-side-encryption
          to: log.responseElementsXAmzServerSideEncryption

      - rename:
          from:
            - log.responseElements.assumedRoleUser
          to: log.responseElementsAssumedRoleUser

      - rename:
          from:
            - log.responseElements.credentials
          to: log.responseElementsCredentials

      - rename:
          from:
            - log.tlsDetails.cipherSuite
          to: log.tlsDetailsCipherSuite

      - rename:
          from:
            - log.tlsDetails.clientProvidedHostHeader
          to: log.tlsDetailsClientProvidedHostHeader

      - rename:
          from:
            - log.tlsDetails.tlsVersion
          to: log.tlsDetailsTlsVersion

      # Drop unnecessary events
      - drop:
          where: log.eventSource=="dynamodb.amazonaws.com" && (log.eventName=="PutItem" || log.eventName=="GetItem" || log.eventName=="ListTables")

      - drop:
          where: log.eventSource=="lambda.amazonaws.com" && log.eventName=="Invoke"

      - drop:
          where: log.eventSource=="s3.amazonaws.com" && (log.eventName=="ListBuckets" || log.eventName=="ListAccessPoints" || log.eventName=="ListStorageLensConfigurations" || log.eventName=="PutBucketPolicy" || log.eventName=="PutObject" || log.eventName=="GetObject" || log.eventName=="DeleteObject")

      - drop:
          where: log.eventSource=="sns.amazonaws.com" && (log.eventName=="ListTopics" || log.eventName=="Publish" || log.eventName=="PublishBatch")

      - drop:
          where: log.eventSource=="cloudtrail.amazonaws.com" && (log.eventName=="ListTrails" || log.eventName=="StartLogging" || log.eventName=="GetInsightSelectors" || log.eventName=="ListInsightsEvents" || log.eventName=="LookupEvents" || log.eventName=="StopLogging" || log.eventName=="DescribeTrails")

      - drop:
          where: log.eventSource=="airflow.amazonaws.com" && log.eventName=="ListEnvironments"

      - drop:
          where: log.eventSource=="amazonmq.amazonaws.com" && log.eventName=="ListBrokers"

      - drop:
          where: log.eventSource=="amplify.amazonaws.com" && log.eventName=="ListApps"

      - drop:
          where: log.eventSource=="apigateway.amazonaws.com" && log.eventName=="GetRestApis"

      - drop:
          where: log.eventSource=="app-integrations.amazonaws.com" && log.eventName=="ListEventIntegrations"

      - drop:
          where: log.eventSource=="appflow.amazonaws.com" && log.eventName=="ListFlows"

      - drop:
          where: log.eventSource=="appmesh.amazonaws.com" && log.eventName=="ListMeshes"

      - drop:
          where: log.eventSource=="apprunner.amazonaws.com" && log.eventName=="ListServices"

      - drop:
          where: log.eventSource=="appstream.amazonaws.com" && (log.eventName=="DescribeImageBuilders" || log.eventName=="DescribeFleets" || log.eventName=="DescribeApplications" || log.eventName=="DescribeStacks")

      - drop:
          where: log.eventSource=="appsync.amazonaws.com" && log.eventName=="ListGraphqlApis"

      - drop:
          where: log.eventSource=="athena.amazonaws.com" && (log.eventName=="ListWorkGroups" || log.eventName=="ListDataCatalogs")

      - drop:
          where: log.eventSource=="auditmanager.amazonaws.com" && log.eventName=="GetAccountStatus"

      - drop:
          where: log.eventSource=="backup.amazonaws.com" && (log.eventName=="RecoveryPointCreated" || log.eventName=="BackupJobCompleted" || log.eventName=="ListBackupVaults" || log.eventName=="ListBackupPlans" || log.eventName=="BackupJobStarted" || log.eventName=="BackupJobCompleted")

      - drop:
          where: log.eventSource=="batch.amazonaws.com" && (log.eventName=="DescribeComputeEnvironments" || log.eventName=="ListSchedulingPolicies" || log.eventName=="DescribeJobQueues")

      - drop:
          where: log.eventSource=="cloudformation.amazonaws.com" && (log.eventName=="ListStacks" || log.eventName=="ListStackSets")

      - drop:
          where: log.eventSource=="cloudfront.amazonaws.com" && (log.eventName=="ListCloudFrontOriginAccessIdentities" || log.eventName=="ListResponseHeadersPolicies" || log.eventName=="ListCachePolicies")

      - drop:
          where: log.eventSource=="codeartifact.amazonaws.com" && (log.eventName=="ListDomains" || log.eventName=="ListRepositories")

      - drop:
          where: log.eventSource=="codebuild.amazonaws.com" && log.eventName=="ListProjects"

      - drop:
          where: log.eventSource=="codecommit.amazonaws.com" && log.eventName=="ListRepositories"

      - drop:
          where: log.eventSource=="codeguru-profiler.amazonaws.com" && log.eventName=="ListProfilingGroups"

      - drop:
          where: log.eventSource=="codeguru-reviewer.amazonaws.com" && log.eventName=="ListRepositoryAssociations"

      - drop:
          where: log.eventSource=="codepipeline.amazonaws.com" && (log.eventName=="ListPipelines" || log.eventName=="ListWebhooks")

      - drop:
          where: log.eventSource=="cognito-identity.amazonaws.com" && log.eventName=="ListIdentityPools"

      - drop:
          where: log.eventSource=="comprehend.amazonaws.com" && (log.eventName=="ListDocumentClassifiers" || log.eventName=="ListEntityRecognizers")

      - drop:
          where: log.eventSource=="connect.amazonaws.com" && log.eventName=="ListInstances"

      - drop:
          where: log.eventSource=="databrew.amazonaws.com" && (log.eventName=="ListDatasets" || log.eventName=="ListSchedules" || log.eventName=="ListJobs" || log.eventName=="ListRecipes" || log.eventName=="ListProjects" || log.eventName=="ListRulesets")

      - drop:
          where: log.eventSource=="dataexchange.amazonaws.com" && log.eventName=="ListDataSets"

      - drop:
          where: log.eventSource=="datasync.amazonaws.com" && (log.eventName=="ListLocations" || log.eventName=="ListTasks")

      - drop:
          where: log.eventSource=="detective.amazonaws.com" && log.eventName=="ListGraphs"

      - drop:
          where: log.eventSource=="dms.amazonaws.com" && (log.eventName=="DescribeReplicationSubnetGroups" || log.eventName=="DescribeEndpoints" || log.eventName=="DescribeEventSubscriptions" || log.eventName=="DescribeReplicationInstances" || log.eventName=="DescribeReplicationTasks")

      - drop:
          where: log.eventSource=="ec2.amazonaws.com" && (log.eventName=="DescribeInstances" || log.eventName=="StartInstances" || log.eventName=="StopInstances" || log.eventName=="RebootInstances" || log.eventName=="DescribeVpcs" || log.eventName=="DescribeReservedInstances" || log.eventName=="DescribeCapacityReservations" || log.eventName=="DescribeEgressOnlyInternetGateways" || log.eventName=="DescribeSpotInstanceRequests" || log.eventName=="DescribeSubnets" || log.eventName=="DescribeIpamScopes" || log.eventName=="DescribeVerifiedAccessInstances" || log.eventName=="DescribeLaunchTemplates" || log.eventName=="DescribePlacementGroups" || log.eventName=="DescribeVpcEndpoints" || log.eventName=="DescribeSpotFleetRequests" || log.eventName=="DescribeManagedPrefixLists" || log.eventName=="DescribeVerifiedAccessEndpoints" || log.eventName=="DescribeKeyPairs" || log.eventName=="DescribeTransitGatewayMulticastDomains" || log.eventName=="DescribeInstanceEventWindows" || log.eventName=="DescribeFlowLogs" || log.eventName=="DescribeIpams" || log.eventName=="DescribeTransitGatewayPolicyTables" || log.eventName=="DescribePublicIpv4Pools" || log.eventName=="DescribeTrafficMirrorTargets" || log.eventName=="DescribeCustomerGateways" || log.eventName=="DescribeTrafficMirrorFilters" || log.eventName=="DescribeDhcpOptions" || log.eventName=="DescribeVolumes" || log.eventName=="DescribeTransitGatewayConnectPeers" || log.eventName=="DescribeTrafficMirrorSessions" || log.eventName=="DescribeFpgaImages" || log.eventName=="DescribeSnapshots" || log.eventName=="DescribeNetworkInsightsAnalyses" || log.eventName=="DescribeNetworkInsightsAccessScopes" || log.eventName=="DescribeFleets" || log.eventName=="DescribeTransitGatewayAttachments" || log.eventName=="DescribeNetworkInterfaces" || log.eventName=="DescribeImages" || log.eventName=="DescribeTransitGatewayRouteTableAnnouncements" || log.eventName=="DescribeNetworkInsightsAccessScopeAnalyses" || log.eventName=="DescribeCarrierGateways" || log.eventName=="DescribeNatGateways" || log.eventName=="DescribeTransitGateways" || log.eventName=="DescribeRouteTables" || log.eventName=="DescribeHosts" || log.eventName=="DescribeHostReservations" || log.eventName=="DescribeVpcPeeringConnections" || log.eventName=="DescribeCapacityReservationFleets" || log.eventName=="DescribeTransitGatewayRouteTables" || log.eventName=="DescribeIpamPools" || log.eventName=="DescribeNetworkInsightsPaths" || log.eventName=="DescribeClientVpnEndpoints" || log.eventName=="GetSubnetCidrReservations" || log.eventName=="DescribeVerifiedAccessGroups")

      - drop:
          where: log.eventSource=="ecs.amazonaws.com" && log.eventName=="DescribeCapacityProviders"

      - drop:
          where: log.eventSource=="elasticache.amazonaws.com" && (log.eventName=="DescribeReplicationGroups" || log.eventName=="DescribeSnapshots" || log.eventName=="DescribeCacheSubnetGroups" || log.eventName=="DescribeCacheParameterGroups" || log.eventName=="DescribeReservedCacheNodes")

      - drop:
          where: log.eventSource=="elasticbeanstalk.amazonaws.com" && (log.eventName=="DescribeApplications" || log.eventName=="DescribeEnvironments" || log.eventName=="DescribeApplicationVersions" || log.eventName=="DescribeAccessPoints" || log.eventName=="DescribeTags")

      - drop:
          where: log.eventSource=="elasticloadbalancing.amazonaws.com" && (log.eventName=="DescribeLoadBalancers" || log.eventName=="DescribeTargetGroups")

      - drop:
          where: log.eventSource=="elasticmapreduce.amazonaws.com" && log.eventName=="ListClusters"

      - drop:
          where: log.eventSource=="emr-containers.amazonaws.com" && log.eventName=="ListVirtualClusters"

      - drop:
          where: log.eventSource=="events.amazonaws.com" && (log.eventName=="ListEventBuses" || log.eventName=="ListRules")

      - drop:
          where: log.eventSource=="evidently.amazonaws.com" && log.eventName=="ListProjects"

      - drop:
          where: log.eventSource=="finspace.amazonaws.com" && log.eventName=="ListEnvironments"

      - drop:
          where: log.eventSource=="firehose.amazonaws.com" && log.eventName=="ListDeliveryStreams"

      - drop:
          where: log.eventSource=="forecast.amazonaws.com" && (log.eventName=="ListDatasets" || log.eventName=="ListDatasetGroups")

      - drop:
          where: log.eventSource=="frauddetector.amazonaws.com" && (log.eventName=="GetModels" || log.eventName=="GetLabels" || log.eventName=="GetExternalModels" || log.eventName=="GetVariables" || log.eventName=="GetEventTypes")

      - drop:
          where: log.eventSource=="fsx.amazonaws.com" && log.eventName=="DescribeFileSystems"

      - drop:
          where: log.eventSource=="gamelift.amazonaws.com" && (log.eventName=="DescribeGameSessionQueues" || log.eventName=="DescribeMatchmakingConfigurations" || log.eventName=="ListAliases" || log.eventName=="ListBuilds")

      - drop:
          where: log.eventSource=="geo.amazonaws.com" && (log.eventName=="ListPlaceIndexes" || log.eventName=="ListTrackers")

      - drop:
          where: log.eventSource=="glacier.amazonaws.com" && log.eventName=="ListVaults"

      - drop:
          where: log.eventSource=="globalaccelerator.amazonaws.com" && log.eventName=="ListAccelerators"

      - drop:
          where: log.eventSource=="glue.amazonaws.com" && (log.eventName=="GetJobs" || log.eventName=="GetDatabases" || log.eventName=="ListMLTransforms" || log.eventName=="GetTriggers" || log.eventName=="GetCrawlers")

      - drop:
          where: log.eventSource=="greengrass.amazonaws.com" && (log.eventName=="ListComponents" || log.eventName=="ListSubscriptionDefinitions" || log.eventName=="ListLoggerDefinitions" || log.eventName=="ListDeviceDefinitions" || log.eventName=="ListCoreDefinitions" || log.eventName=="ListConnectorDefinitions" || log.eventName=="ListResourceDefinitions" || log.eventName=="ListFunctionDefinitions" || log.eventName=="ListGroups")

      - drop:
          where: log.eventSource=="groundstation.amazonaws.com" && log.eventName=="ListConfigs"

      - drop:
          where: log.eventSource=="guardduty.amazonaws.com" && log.eventName=="ListDetectors"

      - drop:
          where: log.eventSource=="healthlake.amazonaws.com" && log.eventName=="ListFHIRDatastores"

      - drop:
          where: log.eventSource=="imagebuilder.amazonaws.com" && (log.eventName=="ListInfrastructureConfigurations" || log.eventName=="ListComponents" || log.eventName=="ListContainerRecipes" || log.eventName=="ListDistributionConfigurations" || log.eventName=="ListImageRecipes" || log.eventName=="ListImages" || log.eventName=="ListImagePipelines")

      - drop:
          where: log.eventSource=="iot.amazonaws.com" && (log.eventName=="ListRoleAliases" || log.eventName=="ListPolicies" || log.eventName=="ListJobTemplates" || log.eventName=="ListProvisioningTemplates" || log.eventName=="ListAuthorizers" || log.eventName=="ListMitigationActions" || log.eventName=="ListThings")

      - drop:
          where: log.eventSource=="iotanalytics.amazonaws.com" && (log.eventName=="ListChannels" || log.eventName=="ListPipelines" || log.eventName=="ListDatastores" || log.eventName=="ListDatasets")

      - drop:
          where: log.eventSource=="iotevents.amazonaws.com" && (log.eventName=="ListAlarmModels" || log.eventName=="ListDetectorModels")

      - drop:
          where: log.eventSource=="iotsitewise.amazonaws.com" && (log.eventName=="ListAssetModels" || log.eventName=="ListPortals" || log.eventName=="ListGateways")

      - drop:
          where: log.eventSource=="iottwinmaker.amazonaws.com" && log.eventName=="ListWorkspaces"

      - drop:
          where: log.eventSource=="iotwireless.amazonaws.com" && log.eventName=="ListServiceProfiles"

      - drop:
          where: log.eventSource=="ivs.amazonaws.com" && log.eventName=="ListChannels"

      - drop:
          where: log.eventSource=="kafka.amazonaws.com" && (log.eventName=="ListClusters" || log.eventName=="ListConfigurations")

      - drop:
          where: log.eventSource=="kendra.amazonaws.com" && log.eventName=="ListIndices"

      - drop:
          where: log.eventSource=="kinesisanalytics.amazonaws.com" && log.eventName=="ListApplications"

      - drop:
          where: log.eventSource=="kinesisvideo.amazonaws.com" && log.eventName=="ListStreams"

      - drop:
          where: log.eventSource=="kms.amazonaws.com" && log.eventName=="Decrypt"

      - drop:
          where: log.eventSource=="lambda.amazonaws.com" && (log.eventName=="ListFunctions20150331" || log.eventName=="ListEventSourceMappings20150331" || log.eventName=="ListCodeSigningConfigs")

      - drop:
          where: log.eventSource=="lex.amazonaws.com" && log.eventName=="ListBots"

      - drop:
          where: log.eventSource=="logs.amazonaws.com" && (log.eventName=="GetLogEvents" || log.eventName=="DescribeLogStreams" || log.eventName=="DescribeLogGroups" || log.eventName=="DescribeDestinations")

      - drop:
          where: log.eventSource=="lookoutmetrics.amazonaws.com" && log.eventName=="ListAlerts"

      - drop:
          where: log.eventSource=="mediapackage.amazonaws.com" && (log.eventName=="ListChannels" || log.eventName=="ListPackagingConfigurations" || log.eventName=="ListOriginEndpoints" || log.eventName=="ListPackagingGroups")

      - drop:
          where: log.eventSource=="mediatailor.amazonaws.com" && log.eventName=="ListPlaybackConfigurations"

      - drop:
          where: log.eventSource=="memorydb.amazonaws.com" && (log.eventName=="DescribeSubnetGroups" || log.eventName=="DescribeACLs" || log.eventName=="DescribeParameterGroups" || log.eventName=="DescribeClusters")

      - drop:
          where: log.eventSource=="monitoring.amazonaws.com" && (log.eventName=="DescribeAlarms" || log.eventName=="ListDashboards" || log.eventName=="ListMetricStreams" || log.eventName=="DescribeInsightRules")

      - drop:
          where: log.eventSource=="networkmanager.amazonaws.com" && (log.eventName=="DescribeGlobalNetworks" || log.eventName=="ListAttachments")

      - drop:
          where: log.eventSource=="panorama.amazonaws.com" && log.eventName=="ListPackages"

      - drop:
          where: log.eventSource=="personalize.amazonaws.com" && (log.eventName=="ListSchemas" || log.eventName=="ListDatasets")

      - drop:
          where: log.eventSource=="pinpoint.amazonaws.com" && log.eventName=="GetApps"

      - drop:
          where: log.eventSource=="proton.amazonaws.com" && log.eventName=="ListEnvironmentAccountConnections"

      - drop:
          where: log.eventSource=="qconnect.amazonaws.com" && log.eventName=="ListAssistants"

      - drop:
          where: log.eventSource=="qldb.amazonaws.com" && log.eventName=="ListLedgers"

      - drop:
          where: log.eventSource=="quicksight.amazonaws.com" && log.eventName=="DescribeAccountSubscription"

      - drop:
          where: log.eventSource=="ram.amazonaws.com" && log.eventName=="GetResourceShares"

      - drop:
          where: log.eventSource=="rds.amazonaws.com" && (log.eventName=="DescribeDBInstances" || log.eventName=="DescribeEventCategories" || log.eventName=="FailoverDBCluster" || log.eventName=="CreateDBSnapshot" || log.eventName=="DescribeDBClusterParameterGroups" || log.eventName=="DescribeOptionGroups" || log.eventName=="DescribeDBSubnetGroups" || log.eventName=="DescribeDBClusters" || log.eventName=="DescribeDBClusterSnapshots" || log.eventName=="DescribeEventSubscriptions" || log.eventName=="DescribeDBSnapshots" || log.eventName=="DescribeDBParameterGroups" || log.eventName=="DescribeBlueGreenDeployments" || log.eventName=="DescribeDBEngineVersions" || log.eventName=="DescribeDBInstanceAutomatedBackups" || log.eventName=="DescribeReservedDBInstances" || log.eventName=="DescribeDBClusterEndpoints" || log.eventName=="DescribeDBProxies" || log.eventName=="DescribeDBProxyEndpoints")

      - drop:
          where: log.eventSource=="redshift.amazonaws.com" && (log.eventName=="DescribeUsageLimits" || log.eventName=="DescribeClusters" || log.eventName=="DescribeClusterSnapshots" || log.eventName=="DescribeEventSubscriptions" || log.eventName=="DescribeClusterSubnetGroups" || log.eventName=="DescribeSnapshotSchedules" || log.eventName=="DescribeSnapshotCopyGrants" || log.eventName=="DescribeClusterParameterGroups")

      - drop:
          where: log.eventSource=="refactor-spaces.amazonaws.com" && log.eventName=="ListEnvironments"

      - drop:
          where: log.eventSource=="rekognition.amazonaws.com" && log.eventName=="DescribeProjects"

      - drop:
          where: log.eventSource=="resiliencehub.amazonaws.com" && log.eventName=="ListResiliencyPolicies"

      - drop:
          where: log.eventSource=="resource-explorer-2.amazonaws.com" && (log.eventName=="GetIndex" || log.eventName=="ListViews")

      - drop:
          where: log.eventSource=="route53resolver.amazonaws.com" && (log.eventName=="ListResolverQueryLogConfigs" || log.eventName=="ListFirewallRuleGroups" || log.eventName=="ListResolverRules" || log.eventName=="ListResolverEndpoints" || log.eventName=="ListFirewallDomainLists")

      - drop:
          where: log.eventSource=="sagemaker.amazonaws.com" && (log.eventName=="CreatePipeline" || log.eventName=="ListModels" || log.eventName=="ListPipelines" || log.eventName=="ListEndpoints" || log.eventName=="ListImages" || log.eventName=="ListNotebookInstances" || log.eventName=="ListFeatureGroups")

      - drop:
          where: log.eventSource=="servicecatalog-appregistry.amazonaws.com" && (log.eventName=="ListAttributeGroups" || log.eventName=="ListApplications")

      - drop:
          where: log.eventSource=="ses.amazonaws.com" && (log.eventName=="ListConfigurationSets" || log.eventName=="ListEmailIdentities" || log.eventName=="ListContactLists")

      - drop:
          where: log.eventSource=="signer.amazonaws.com" && log.eventName=="ListSigningProfiles"

      - drop:
          where: log.eventSource=="ssm.amazonaws.com" && (log.eventName=="DescribeParameters" || log.eventName=="ListDocuments" || log.eventName=="DescribeMaintenanceWindows" || log.eventName=="ListAssociations" || log.eventName=="ListResourceDataSync" || log.eventName=="DescribeInstanceInformation")

      - drop:
          where: log.eventSource=="states.amazonaws.com" && (log.eventName=="ListStateMachines" || log.eventName=="ListActivities")

      - drop:
          where: log.eventSource=="sts.amazonaws.com" && log.eventName=="AssumeRole"

      - drop:
          where: log.eventSource=="tagging.amazonaws.com" && log.eventName=="GetResources"

      - drop:
          where: log.eventSource=="transfer.amazonaws.com" && log.eventName=="ListWorkflows"

      - drop:
          where: log.eventSource=="workspaces.amazonaws.com" && log.eventName=="DescribeWorkspaces"

      - drop:
          where: log.eventSource=="ecr.amazonaws.com" && log.eventName=="DescribeRepositories"

      - drop:
          where: log.eventSource=="ecs.amazonaws.com" && log.eventName=="ListClusters"

      - drop:
          where: log.eventSource=="eks.amazonaws.com" && log.eventName=="ListClusters"

      - drop:
          where: log.eventSource=="elasticache.amazonaws.com" && log.eventName=="DescribeCacheClusters"

      - drop:
          where: log.eventSource=="elasticfilesystem.amazonaws.com" && log.eventName=="DescribeFileSystems"

      - drop:
          where: log.eventSource=="emr-containers.amazonaws.com" && log.eventName=="ListJobs"

      - drop:
          where: log.eventSource=="emr-serverless.amazonaws.com" && log.eventName=="ListApplications"

      - drop:
          where: log.eventSource=="emr.amazonaws.com" && log.eventName=="ListClusters"

      - drop:
          where: log.eventSource=="guardduty.amazonaws.com" && log.eventName=="GetFindings"

      - drop:
          where: log.eventSource=="codecommit.amazonaws.com" && log.eventName=="CreateRepository"

      - drop:
          where: log.eventSource=="cognito-identity.amazonaws.com" && (log.eventName=="GetOpenIdToken" || log.eventName=="ListIdentities")

      - drop:
          where: log.eventSource=="iam.amazonaws.com" && log.eventName=="ListPolicies"

      - delete:
          fields:
            - log.requestParameters
            - log.responseElements
            - log.userIdentity
            - log.additionalEventData