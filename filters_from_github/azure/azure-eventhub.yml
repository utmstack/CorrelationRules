# Azure Envent-Hub filter, version 2.0.0
# 
# Documentations
# 1- https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/activity-log
# 2- https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/activity-log-schema
pipeline:
  - dataTypes:
      - azure
    steps:
      - json:
          source: raw
    
      # .......................................................................#
      # Renaming fields
      # .......................................................................#
      - rename:
          from:
            - log.ResponseBodySize
          to: origin.bytesSent

      - rename:
          from:
            - log.ResponseHeaderSize
          to: origin.bytesReceived

      - rename:
          from:
            - log.Uri
          to: target.url

      - rename:
          from:
            - log.AccountName
          to: origin.host

      - rename:
          from:
            - log.StatusCode
          to: statusCode

      - rename:
          from:
            - log.Protocol
          to: protocol

      - rename:
          from:
            - log.StatusText
          to: connectionStatus

      - rename:
          from:
            - log.Location
          to: origin.geolocation.country

      - rename:
          from:
            - log.ResponseCode
          to: statusCode

      - rename:
          from:
            - log.AADClientId
          to: log.aadClientId

      - rename:
          from:
            - log.AADObjectId
          to: log.aadObjectId

      - rename:
          from:
            - log.AADTenantId
          to: log.aadTenantId

      - rename:
          from:
            - log.CorrelationId
          to: log.correlationId

      - rename:
          from:
            - log.IsBillableQuery
          to: log.isBillableQuery

      - rename:
          from:
            - log.QueryText
          to: log.queryText

      - rename:
          from:
            - log.RequestContext
          to: log.requestContext

      - rename:
          from:
            - log.RequestTarget
          to: log.requestTarget

      - rename:
          from:
            - log.ResponseDurationMs
          to: log.responseDurationMs

      - rename:
          from:
            - log.ResponseRowCount
          to: log.responseRowCount

      - rename:
          from:
            - log.StatsCPUTimeMs
          to: log.statsCPUTimeMs

      - rename:
          from:
            - log.StatsRegionCount
          to: log.statsRegionCount

      - rename:
          from:
            - log.StatsWorkspaceCount
          to: log.statsWorkspaceCount

      - rename:
          from:
            - log.TenantId
          to: log.tenantId

      - rename:
          from:
            - log.TimeGenerated
          to: log.timeGenerated

      - rename:
          from:
            - log.Type
          to: log.type

      - rename:
          from:
            - log.WorkspaceId
          to: log.workspaceId

      - rename:
          from:
            - log.ResourceId
          to: log.resourceId
          

      # .......................................................................#
      # Using grok to parse IP and port of the CallerIpAddress
      # .......................................................................#
      - grok:
          patterns:
            - fieldName: origin.ip
              pattern: '{{.ipv4}}(:)'
            - fieldName: origin.port
              pattern: '{{.integer}}'
          source: log.CallerIpAddress
          where:
            variables:
              - get: log.CallerIpAddress
                as: ip
                ofType: string
            expression: ip.contains(":")

      # .......................................................................#
      # Remove caracters unnecessary to remote.ip
      # .......................................................................#
      - trim:
          function: suffix
          substring: ':'
          fields:
            - origin.ip

      # .......................................................................#
      # Add geolocation to remote.ip
      # .......................................................................#
      - dynamic:
          plugin: com.utmstack.geolocation
          params:
            source: origin.ip
            destination: origin.geolocation
          where:
            variables:
              - get: origin.ip
                as: ip
                ofType: string
            expression: "ip_ok == true"

      # .......................................................................#
      # Fields conversions
      # .......................................................................#
      - cast:
          fields:
            - origin.port
            - statusCode
          to: int

      - cast:
          fields:
            - origin.bytesSent
            - origin.bytesReceived
          to: float64

      # Adding actionResult
      # denied by default
      - add:
          function: 'string'
          params:
            key: actionResult
            value: 'denied'
      - add:
          function: 'string'
          params:
            key: actionResult
            value: 'accepted'
          where:
            variables:
              - get: statusCode
                as: cod
                ofType: int
              - get: origin.bytesReceived
                as: rec
                ofType: int
            expression: cod_ok == true && (cod >= 200 && cod <= 299 || (rec_ok == true && cod >= 300 && cod <= 399 && rec > 0))