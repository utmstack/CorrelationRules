- id: 1018
  dataTypes:
    - nginx
  name: Rewrite Rule Bypass Attempts
  impact:
    confidentiality: 4
    integrity: 3
    availability: 1
  category: Defense Evasion
  technique: Valid Accounts
  adversary: origin
  references:
    - https://attack.mitre.org/techniques/T1078/
    - https://nginx.org/en/docs/http/ngx_http_rewrite_module.html
  description: Detects attempts to bypass nginx rewrite rules through URL encoding, path normalization issues, or specially crafted requests that could allow unauthorized access to restricted resources
  where: |
    safe(origin.ip, "") != "" && safe(origin.path, "") != "" && (
      origin.path matches ".*%2[fF].*%2[fF].*" ||
      origin.path matches ".*%5[cC].*%5[cC].*" ||
      origin.path matches ".*\\.\\./\\.\\./.*" ||
      origin.path matches ".*//+.*" ||
      origin.path matches ".*\\.%2[eE].*" ||
      origin.path matches ".*%00.*" ||
      origin.path matches ".*[\\x80-\\xFF].*" ||
      (safe(log.request, "") matches ".*\\?.*\\?.*" && origin.path matches ".*/admin.*") ||
      (safe(statusCode, 0) == 200 && origin.path matches ".*/\\.\\..*") ||
      (safe(log.method, "") != "" && log.method matches ".*[^A-Z].*" && log.method != "-")
    )
  afterEvents:
    - indexPattern: v11-log-*
      with:
        - field: origin.ip.keyword
          operator: filter_term
          value: '{{origin.ip}}'
        - field: statusCode
          operator: filter_term
          value: "200"
      within: now-30m
      count: 10
  deduplicateBy:
    - origin.ip
    - origin.path