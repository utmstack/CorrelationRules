- id: 1013
  dataTypes:
    - osquery
  name: SQLite Exploitation Attempt on Osquery
  impact:
    confidentiality: 4
    integrity: 3
    availability: 2
  category: SQL Injection
  technique: Exploitation of Remote Services
  adversary: origin
  references:
    - https://www.sqlite.org/cves.html
    - https://github.com/osquery/osquery/blob/master/SECURITY.md
    - https://attack.mitre.org/techniques/T1210/
  description: Detects potential SQLite exploitation attempts including SQL injection, memory leaks through malicious queries, or attempts to tamper with SQLite database files used by osquery
  where: |
    (contains(safe(log.message, ""), "SQL injection") && safe(action, "") == "osquery.result") ||
    (contains(safe(log.message, ""), "maliciously crafted SQL") && safe(log.eventName, "") != "") ||
    (contains(safe(log.message, ""), "SQLite") && contains(safe(log.message, ""), "memory leak")) ||
    (contains(safe(log.message, ""), "corrupt") && contains(safe(log.message, ""), "database")) ||
    (safe(actionResult, "") == "error" && contains(safe(log.message, ""), "SQL syntax")) ||
    (contains(safe(log.message, ""), "SQLite authorizer") && contains(safe(log.message, ""), "denied"))
  afterEvents:
    - indexPattern: v11-log-*
      with:
        - field: origin.host.keyword
          operator: filter_term
          value: '{{origin.host}}'
        - field: origin.user.keyword
          operator: filter_term
          value: '{{origin.user}}'
      within: now-30m
      count: 3
  deduplicateBy:
    - origin.host
    - origin.user