- id: 1003
  dataTypes:
    - haproxy
  name: HAProxy Stick Table Attack Detection
  impact:
    confidentiality: 2
    integrity: 3
    availability: 4
  category: Resource Development
  technique: Resource Hijacking
  adversary: origin
  references:
    - https://www.haproxy.com/blog/introduction-to-haproxy-stick-tables
    - https://attack.mitre.org/techniques/T1496/
  description: Detects attacks targeting HAProxy stick tables including table overflow attempts, session hijacking through stick table manipulation, or attempts to exhaust stick table resources for denial of service
  where: |
    (safe(action, "") == "haproxy.log" &&
     ((safe(log.message, "") contains "stick-table" &&
       (safe(log.message, "") contains "overflow" ||
        safe(log.message, "") contains "full" ||
        safe(log.message, "") contains "limit reached" ||
        safe(log.message, "") contains "exceeded")) ||
      (safe(log.haproxy.http.request.captured_headers, "") != "" &&
       length(safe(log.haproxy.http.request.captured_headers, "")) > 1000) ||
      (safe(log.haproxy.termination_state, "") contains "PT" &&
       safe(log.haproxy.time_backend_connect, 0) < 1) ||
      (safe(log.message, "") contains "table" &&
       safe(log.message, "") contains "entry" &&
       (safe(log.message, "") contains "rate limit" ||
        safe(log.message, "") contains "conn_rate" ||
        safe(log.message, "") contains "http_req_rate")))) ||
    (safe(log.haproxy.connections.active, 0) > 10000 &&
     safe(log.haproxy.connections.frontend, 0) > 5000)
  afterEvents:
    - indexPattern: v11-log-*
      with:
        - field: origin.host.keyword
          operator: filter_term
          value: '{{origin.host}}'
        - field: log.haproxy.source.keyword
          operator: filter_term
          value: '{{log.haproxy.source}}'
      within: now-5m
      count: 10
  deduplicateBy:
    - origin.host
    - log.haproxy.source