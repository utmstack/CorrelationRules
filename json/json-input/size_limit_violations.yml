- id: 1008
  dataTypes:
    - json-input
  name: JSON Size Limit Violation Detection
  impact:
    confidentiality: 1
    integrity: 2
    availability: 5
  category: Resource Exhaustion
  technique: JSON Payload Overflow
  adversary: origin
  references:
    - https://www.acunetix.com/blog/articles/json-web-token-jwt-attacks-vulnerabilities/
    - https://attack.mitre.org/techniques/T1499/
  description: Detects attempts to send oversized JSON payloads that could lead to denial of service, memory exhaustion, or buffer overflow conditions
  where: >
    (safe(log.content_length, 0) > 1048576) ||
    (safe(log.json_size, 0) > 1048576) ||
    (safe(log.payload_size, 0) > 1048576) ||
    (safe(log.error, "") contains "payload too large") ||
    (safe(log.error, "") contains "size limit exceeded") ||
    (safe(log.parser_error, "") contains "maximum size") ||
    (safe(log.response_code, 0) == 413) ||
    (safe(log.array_length, 0) > 10000) ||
    (safe(log.object_count, 0) > 10000)
  afterEvents:
    - indexPattern: v11-log-*
      with:
        - field: origin.ip.keyword
          operator: filter_term
          value: '{{origin.ip}}'
      within: now-5m
      count: 3
  deduplicateBy:
    - origin.ip
    - log.request_id