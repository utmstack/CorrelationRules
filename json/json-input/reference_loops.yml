- id: 1022
  dataTypes:
    - json-input
  name: JSON Reference Loop Attack
  impact:
    confidentiality: 1
    integrity: 3
    availability: 5
  category: Resource Exhaustion
  technique: Denial of Service
  adversary: origin
  references:
    - https://bishopfox.com/blog/json-interoperability-vulnerabilities
    - https://attack.mitre.org/techniques/T1499/
  description: Detects attempts to create circular references or reference loops in JSON data that could lead to infinite loops, memory exhaustion, or parser crashes. This attack exploits JSON parsers that don't properly handle circular references.
  where: >
    (safe(log.error, "") contains "circular reference" ||
     safe(log.error, "") contains "reference loop" ||
     safe(log.error_type, "") == "circular_dependency" ||
     safe(log.parser_error, "") contains "maximum recursion" ||
     safe(log.message, "") contains "infinite loop detected" ||
     safe(log.json_depth, 0) > 100 ||
     (safe(log.error_code, "") == "ERR_JSON_CIRCULAR_REF" || 
      safe(log.error_code, "") == "ERR_MAX_RECURSION"))
  afterEvents:
    - indexPattern: v11-log-*
      with:
        - field: origin.ip.keyword
          operator: filter_term
          value: '{{origin.ip}}'
      within: now-10m
      count: 5
  deduplicateBy:
    - origin.ip
    - log.endpoint