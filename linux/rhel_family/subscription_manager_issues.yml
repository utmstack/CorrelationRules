- id: 1005
  dataTypes:
    - rhel_family
  name: Subscription Manager Security Issue
  impact:
    confidentiality: 3
    integrity: 4
    availability: 5
  category: System Management
  technique: Valid Accounts
  adversary: origin
  references:
    - https://attack.mitre.org/techniques/T1078/
    - https://access.redhat.com/documentation/en-us/red_hat_subscription_management/
  description: Detects suspicious subscription manager activities that could indicate unauthorized system registration, subscription tampering, or attempts to bypass licensing controls
  where: |
    (
      safe(log.comm, "") in ["subscription-manager", "rhsmcertd", "rhsm-service"] &&
      (
        (safe(log.args, "") contains "unregister" &&
         safe(log.uid, "") != "0") ||
        (safe(log.args, "") contains "register" &&
         (safe(log.args, "") contains "--force" ||
          safe(log.args, "") contains "--activationkey")) ||
        (safe(log.args, "") contains "config" &&
         (safe(log.args, "") contains "--server.hostname" ||
          safe(log.args, "") contains "--server.proxy_hostname" ||
          safe(log.args, "") contains "--rhsm.baseurl")) ||
        safe(log.args, "") contains "override" ||
        safe(log.args, "") contains "clean"
      )
    ) ||
    (
      safe(log.path, "") contains "/etc/rhsm/" &&
      safe(log.syscall, "") in ["2", "257", "82", "83"] &&
      safe(log.comm, "") not in ["subscription-manager", "rhsmcertd", "python", "python3"]
    ) ||
    (
      safe(log.message, "") contains "subscription" &&
      (
        safe(log.message, "") contains "expired" ||
        safe(log.message, "") contains "invalid" ||
        safe(log.message, "") contains "failed" ||
        safe(log.message, "") contains "certificate" ||
        safe(log.message, "") contains "unauthorized"
      )
    ) ||
    (
      safe(log.eventType, "") == "SUBSCRIPTION_EVENT" &&
      (
        safe(log.status, "") == "failed" ||
        safe(log.action, "") in ["unregister", "override", "force_register"]
      )
    )
  afterEvents:
    - indexPattern: v11-log-*
      with:
        - field: origin.ip.keyword
          operator: filter_term
          value: '{{origin.ip}}'
        - field: log.comm.keyword
          operator: filter_term
          value: 'subscription-manager'
      within: now-1h
      count: 3
  deduplicateBy:
    - origin.ip
    - log.comm