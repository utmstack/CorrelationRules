- id: 1025
  dataTypes:
    - rhel_family
  name: RHEL-Specific Malware Detection
  impact:
    confidentiality: 5
    integrity: 5
    availability: 4
  category: Malware
  technique: T1055 - Process Injection
  adversary: origin
  references:
    - https://attack.mitre.org/techniques/T1055/
    - https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/checking-integrity-with-aide_security-hardening
  description: Detects indicators of malware specifically targeting RHEL systems including known rootkits, suspicious kernel modules, process injection attempts, and malicious RPM packages or scripts exploiting RHEL-specific vulnerabilities
  where: |
    (safe(log.process_name, "") in ["reptile", "bdvl", "kovid", "suterusu", "rooty", "vlany"] && safe(log.action, "") == "process_create") ||
    (safe(log.file_path, "") contains ["/proc/kallsyms", "/dev/kmem", "/dev/mem"] && safe(log.action, "") in ["read", "write"]) ||
    (safe(log.rpm_package, "") != "" && safe(log.rpm_signature, "") in ["NOKEY", "NOTTRUSTED", "BAD"]) ||
    (safe(log.command, "") contains ["LD_PRELOAD=", "LD_LIBRARY_PATH="] && safe(log.library_path, "") contains ["/tmp/", "/var/tmp/", "/dev/shm/"]) ||
    (safe(log.kernel_module, "") != "" && safe(log.module_path, "") contains ["/tmp/", "/var/tmp/", "/dev/shm/"] && safe(log.action, "") == "load") ||
    (safe(log.process_injection, "") == "true" && safe(log.target_process, "") in ["systemd", "sshd", "httpd", "firewalld"]) ||
    (safe(log.file_hash, "") in ["known_malware_hash_1", "known_malware_hash_2"]) ||
    (safe(log.network_connection, "") != "" && safe(log.destination_port, "") in [4444, 5555, 6666, 7777, 8888] && safe(log.process_name, "") in ["bash", "sh", "python", "perl"]) ||
    (safe(log.syscall, "") in ["ptrace", "process_vm_write", "setns"] && safe(log.target_pid, "") == 1) ||
    (safe(log.selinux_context, "") contains "unconfined" && safe(log.process_name, "") contains ["backdoor", "rootkit", "miner"])
  afterEvents:
    - indexPattern: v11-log-*
      with:
        - field: origin.ip.keyword
          operator: filter_term
          value: '{{origin.ip}}'
      within: now-6h
      count: 2
  deduplicateBy:
    - origin.ip
    - log.process_name
    - log.file_hash